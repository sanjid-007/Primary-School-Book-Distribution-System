-- -- Create the 'bookdistribution' database
-- CREATE DATABASE IF NOT EXISTS bookdistribution;

-- -- Use the 'bookdistribution' database
-- USE bookdistribution;

-- -- Create the 'student_info' table
-- CREATE TABLE IF NOT EXISTS student_info (
--     roll_number INT PRIMARY KEY,
--     student_first_name VARCHAR(255),
--     student_last_name VARCHAR(255),
--     class_name VARCHAR(255),
--     fathers_name_mothers_name VARCHAR(255),
--     address VARCHAR(255),
--     phone_number VARCHAR(15),
--     birthdate DATE
-- );

-- Create the 'assigned_class1_books' table with an array of dates
-- CREATE TABLE IF NOT EXISTS assigned_class1_books (
--     roll_number INT,
--     bangla BOOLEAN,
--     english BOOLEAN,
--     math BOOLEAN,
--     given_dates JSON,
--     FOREIGN KEY (roll_number) REFERENCES student_info(roll_number)
-- );  

CREATE TABLE IF NOT EXISTS class1studentinfo(
    roll_number INT PRIMARY KEY,
    student_first_name VARCHAR(255),
    student_last_name VARCHAR(255),
    class_name VARCHAR(255),
    fathers_name VARCHAR(255),
    mothers_name VARCHAR(255),
    address VARCHAR(255),
    phone_number VARCHAR(15),
    birthdate DATE
);
-- Table for Class 2
CREATE TABLE IF NOT EXISTS class2studentinfo (
    roll_number INT PRIMARY KEY,
    student_first_name VARCHAR(255),
    student_last_name VARCHAR(255),
    class_name VARCHAR(255),
    fathers_name VARCHAR(255),
    mothers_name VARCHAR(255),
    address VARCHAR(255),
    phone_number VARCHAR(15),
    birthdate DATE
);

-- Table for Class 3
CREATE TABLE IF NOT EXISTS class3studentinfo (
    roll_number INT PRIMARY KEY,
    student_first_name VARCHAR(255),
    student_last_name VARCHAR(255),
    class_name VARCHAR(255),
    fathers_name VARCHAR(255),
    mothers_name VARCHAR(255),
    address VARCHAR(255),
    phone_number VARCHAR(15),
    birthdate DATE
);

-- Table for Class 4
CREATE TABLE IF NOT EXISTS class4studentinfo (
    roll_number INT PRIMARY KEY,
    student_first_name VARCHAR(255),
    student_last_name VARCHAR(255),
    class_name VARCHAR(255),
    fathers_name VARCHAR(255),
    mothers_name VARCHAR(255),
    address VARCHAR(255),
    phone_number VARCHAR(15),
    birthdate DATE
);

-- Table for Class 5
CREATE TABLE IF NOT EXISTS class5studentinfo (
    roll_number INT PRIMARY KEY,
    student_first_name VARCHAR(255),
    student_last_name VARCHAR(255),
    class_name VARCHAR(255),
    fathers_name VARCHAR(255),
    mothers_name VARCHAR(255),
    address VARCHAR(255),
    phone_number VARCHAR(15),
    birthdate DATE
);







CREATE TABLE IF NOT EXISTS assignedbookclass1student (
    roll_number INT,
    bangla BOOLEAN,
    english BOOLEAN,
    math BOOLEAN,
    given_dates JSON,
    FOREIGN KEY (roll_number) REFERENCES class1studentinfo(roll_number)
);

-- Table for Assigned Books for Class 2
CREATE TABLE IF NOT EXISTS assignedbookclass2student (
    roll_number INT,
    bangla BOOLEAN,
    english BOOLEAN,
    math BOOLEAN,
    given_dates JSON,
    FOREIGN KEY (roll_number) REFERENCES class2studentinfo(roll_number)
);

-- Table for Assigned Books for Class 3
CREATE TABLE IF NOT EXISTS assignedbookclass3student (
    roll_number INT,
    bangla BOOLEAN,
    english BOOLEAN,
    math BOOLEAN,
    science BOOLEAN,
    social_science BOOLEAN,
    religion BOOLEAN,
    given_dates JSON,
    FOREIGN KEY (roll_number) REFERENCES class3studentinfo(roll_number)
);

-- Table for Assigned Books for Class 4
CREATE TABLE IF NOT EXISTS assignedbookclass4student (
    roll_number INT,
    bangla BOOLEAN,
    english BOOLEAN,
    math BOOLEAN,
    science BOOLEAN,
    social_science BOOLEAN,
    religion BOOLEAN,
    given_dates JSON,
    FOREIGN KEY (roll_number) REFERENCES class4studentinfo(roll_number)
);

-- Table for Assigned Books for Class 5
CREATE TABLE IF NOT EXISTS assignedbookclass5student (
    roll_number INT,
    bangla BOOLEAN,
    english BOOLEAN,
    math BOOLEAN,
    science BOOLEAN,
    social_science BOOLEAN,
    religion BOOLEAN,
    given_dates JSON,
    FOREIGN KEY (roll_number) REFERENCES class5studentinfo(roll_number)
);

























-- Create the 'student_info' table with separate columns for father's name and mother's name
CREATE TABLE IF NOT EXISTS student_info (
    student_id INT AUTO_INCREMENT PRIMARY KEY,
    roll_number INT,
    student_first_name VARCHAR(255),
    student_last_name VARCHAR(255),
    class_name VARCHAR(255),
    father_name VARCHAR(255),
    mother_name VARCHAR(255),
    address VARCHAR(255),
    phone_number VARCHAR(15),
    birthdate DATE,
    FOREIGN KEY (class_name) REFERENCES classes(class_name),
    UNIQUE KEY unique_roll_per_class (roll_number, class_name)
);


CREATE TABLE IF NOT EXISTS classes (
    class_name VARCHAR(255) PRIMARY KEY
);

-- Create the 'books' table
CREATE TABLE IF NOT EXISTS booklistofeachclass (
    book_id INT AUTO_INCREMENT PRIMARY KEY,
    class_name VARCHAR(255),
    book_name VARCHAR(255),
    FOREIGN KEY (class_name) REFERENCES classes(class_name)
);

CREATE TABLE IF NOT EXISTS book_assignments (
    assignment_id INT AUTO_INCREMENT PRIMARY KEY,
    student_id INT,
    book_id INT,
    FOREIGN KEY (student_id) REFERENCES student_info(student_id),
    FOREIGN KEY (book_id) REFERENCES booklistofeachclass(book_id)
);


-- Insert values into the 'classes' table with space between "Class" and the class number
INSERT INTO classes (class_name) VALUES ('Class 1');
INSERT INTO classes (class_name) VALUES ('Class 2');
INSERT INTO classes (class_name) VALUES ('Class 3');
INSERT INTO classes (class_name) VALUES ('Class 4');
INSERT INTO classes (class_name) VALUES ('Class 5');

