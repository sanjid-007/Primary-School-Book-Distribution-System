<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Document</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet"
    integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous">
  <link href="https://assets.codepen.io/344846/style.css" rel="stylesheet" />
  <link rel="stylesheet" href="/form.css" />
   <link rel="stylesheet" href="/assets/css/data-show-style.css">
    
  <style>
      .edit-box {
  display: none;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  padding: 20px;
  background-color: #f0f0f0;
  border: 1px solid #ccc;
  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
  width: 80%; /* Adjust the width as needed */
  max-width: 600px; /* Adjust the max-width as needed */
  height: auto; /* Adjust the height as needed */
}

  </style> 

</head>

<body>

  <div>

    {{!-- <button onclick="showEditBox()">Edit</button> --}}
  </div>

  <!-- Edit Box -->
  <div id="editBox" class="edit-box">
    {{!-- <label for="editedContent">Edit Content:</label>
    <textarea id="editedContent" rows="4" cols="50"></textarea>
    <br> --}}
    
    <div >
      <form class="well form-horizontal" id="contact_form">

        <fieldset>
          <!-- Text input-first নাম -->

          <div class="form-group">
            <label class="col-md-4 control-label">শ্রেণি</label>
            <div class="col-md-4 inputGroupContainer">
              <div class="input-group">
                <span class="input-group-addon"><i class="glyphicon glyphicon-user"></i></span>
                <label for="classNoInput"></label>
                <!-- Existing input field with readonly attribute -->
                {{!-- <select id="classNoInput" name="classNo" class="form-control" required>
                  <option value="1">প্রথম শ্রেণি</option>
                </select> --}}
                <input type="text" id="classNoInput" name="classNo" class="form-control" readonly>


              </div>
            </div>
          </div>


          <!-- Text input-roll -->


          <div class="form-group">
            <label class="col-md-4 control-label">রোল</label>
            <div class="col-md-4 inputGroupContainer">
              <div class="input-group">
                <span class="input-group-addon"><i class="glyphicon glyphicon-list"></i></span>

                {{!-- <input name="roll" placeholder="ছাত্র/ছাত্রীর রোল নম্বর এন্ট্রি করুন" class="form-control"
                  type="number" step="1" required />
                <input type="text" id="classNoInput" name="classNo" class="form-control" readonly> --}}
                <input step="1" type="number" id="rollNoInput" name="roll" class="form-control" readonly>
              </div>
            </div>
          </div>

          <div class="form-group">
            <label class="col-md-4 control-label">শিক্ষাবর্ষ</label>
            <div class="col-md-4 inputGroupContainer">
              <div class="input-group">
                <span class="input-group-addon"><i class="glyphicon glyphicon-list"></i></span>
                {{!-- <input name="studyyear" placeholder="ছাত্র/ছাত্রীর শিক্ষাবর্ষ এন্ট্রি করুন" class="form-control"
                  type="number" step="1" required /> --}}

                <input type="number" id="yearNoInput" step="1" name="studyyear" class="form-control" readonly>
              </div>
            </div>
          </div>




          <!-- Checkbox checks -->
          <!-- Checkbox checks -->
          <!-- Checkbox checks -->
          <div class="form-group">
            <label class="col-md-4 control-label">Has this student received Bangla Textbook?</label>
            <div class="col-md-4">
              <input type="checkbox" id="bangla" name="subjects" value="0" />
              <label for="bangla">Yes</label>
            </div>
          </div>

          <!-- Checkbox checks -->
          <div class="form-group">
            <label class="col-md-4 control-label">Has this student received English Textbook?</label>
            <div class="col-md-4">
              <input type="checkbox" id="english" name="subjects" value="0" />
              <label for="english">Yes</label>
            </div>
          </div>

          <!-- Checkbox checks -->
          <div class="form-group">
            <label class="col-md-4 control-label">Has this student received Math Textbook?</label>
            <div class="col-md-4">
              <input type="checkbox" id="math" name="subjects" value="0" />
              <label for="math">Yes</label>
            </div>
          </div>



          <!-- Text area-description -->
          <div class="form-group">
            <label class="col-md-4 control-label">ছাত্র/ছাত্রীর বর্ণনা</label>
            <div class="col-md-4 inputGroupContainer">
              <div class="input-group">
                <span class="input-group-addon"><i class="glyphicon glyphicon-pencil"></i></span>
                <textarea class="form-control" id="commentInput" name="comment" required></textarea>
              </div>
            </div>
          </div>

          <!-- Success message -->
          {{!-- <div class="alert alert-success" role="alert" id="success_message">
            Success
            <i class="glyphicon glyphicon-thumbs-up"></i>
            Thanks for contacting us, we will get back to you shortly.
          </div> --}}

          <!-- Submit Button -->
         <div class="form-group">
    <label class="col-md-4 control-label"></label>
    <div class="col-md-8"> <!-- Increase the column size to accommodate both buttons side by side -->
        <button type="button" class="btn btn-warning" onclick="submitForm()">
            আপডেট করুন
            <span class="glyphicon glyphicon-send"></span>
        </button>
        <button type="button" class="btn btn-warning" onclick="cancelEdit()">
            Cancel
            <span class="glyphicon glyphicon-send"></span>
        </button>
    </div>
</div>

          
        </fieldset>
      </form>
    </div>

  </div>

  <script>

    function showEditBox(class_no, roll, year, bangla, english, math, comment) {

      const editBox = document.getElementById('editBox');


      console.log(bangla, english, math);


      document.getElementById('classNoInput').value = class_no;
      document.getElementById('rollNoInput').value = roll;
      document.getElementById('yearNoInput').value = year;

      if (bangla === 'true') {
        var checkbox = document.getElementById("bangla");
        checkbox.checked = bangla;
        document.getElementById("bangla").value = bangla;
      }

      if (english === 'true') {
        var checkbox2 = document.getElementById("english");
        checkbox2.checked = english;
        document.getElementById("english").value = english;
      }

      if (math === 'true') {
        var checkbox3 = document.getElementById("math");
        checkbox3.checked = math;
        document.getElementById("math").value = english;
      }






      document.getElementById('commentInput').value = comment;

      editBox.style.display = 'block';
    }
    function cancelEdit() {
      // Hide the edit box without saving changes
      document.getElementById('editBox').style.display = 'none';
    }


  </script>

  <script>
    function submitForm() {
      document.getElementById('editBox').style.display = 'none';
      const form = document.getElementById('contact_form');
      const formData = new FormData(form);

      // Convert FormData to JSON object
      const jsonObject = {};
      jsonObject['subjects'] = [false, false, false]; // Initialize with boolean values

      formData.forEach((value, key) => {
        if (key !== 'subjects') {
          jsonObject[key] = value;
        }
      });

      // Update the subjects array based on checkbox states
      jsonObject['subjects'][0] = document.getElementById('bangla').checked;
      jsonObject['subjects'][1] = document.getElementById('english').checked;
      jsonObject['subjects'][2] = document.getElementById('math').checked;

      // Make a POST request to your server with the JSON data
      fetch('/update-book-distribution-to-students-class1&2', {
        method: 'PUT',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(jsonObject),
      })
        .then(response => response.json())
        .then(data => {
          if (data && data.message) {
            alert(data.message);
            updateResults();
            // You can perform additional actions based on the server response
          } else {
            alert('Server response is undefined or missing message.');
          }
        })
        .catch(error => {
          console.error('Error:', error.message);
          alert('An error occurred while submitting the form.');
        });
    }
  </script>

















  <div class="bg-white  dark:text-gray-900 text-gray-700 h-screen flex overflow-hidden text-sm"
    style="background-color: rgb(255, 255, 255);">
    <!-- side navigation section -->
    <div class="bg-white w-20 flex-shrink-0 border-r    flex-col hidden sm:flex">
      <div class="h-16 text-blue-500 flex items-center justify-center">
        <img src="http://localhost:4000/assets/images/annada.jpeg" style="width: 35px; height: 35px; border-radius: 50%"
          alt="" srcset="" />
      </div>

      <div class="flex mx-auto flex-grow mt-4 flex-col text-gray-900 space-y-4">
        <a href="/">
          <button3.9632+ class="h-10 w-12 dark:text-gray-900 rounded-md flex items-center justify-center">
            <svg viewBox="0 0 24 24" class="h-5" stroke="currentColor" stroke-width="2" fill="none"
              stroke-linecap="round" stroke-linejoin="round">
              <path d="M3 9l9-7 9 7v11a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z"></path>
              <polyline points="9 22 9 12 15 12 15 22"></polyline>
            </svg>
            </button>
        </a>

        <a href="http://localhost:4000/http://127.0.0.1:5500/main-menu.html">
          <button class="h-10 w-12 dark:text-gray-900 rounded-md flex items-center justify-center">
            <svg viewBox="0 0 24 24" class="h-5" stroke="currentColor" stroke-width="2" fill="none"
              stroke-linecap="round" stroke-linejoin="round">
              <rect x="2" y="7" width="20" height="14" rx="2" ry="2"></rect>
              <path d="M16 21V5a2 2 0 0 0-2-2h-4a2 2 0 0 0-2 2v16"></path>
            </svg>
          </button>
        </a>

        <a href="/std-entry">
          <button class="h-10 w-12 dark:text-gray-900 rounded-md flex items-center justify-center">
            <svg viewBox="0 0 24 24" class="h-5" stroke="currentColor" stroke-width="2" fill="none"
              stroke-linecap="round" stroke-linejoin="round">
              <path d="M22 19a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h5l2 3h9a2 2 0 0 1 2 2z"></path>
              <line x1="12" y1="11" x2="12" y2="17"></line>
              <line x1="9" y1="14" x2="15" y2="14"></line>
            </svg>
          </button>
        </a>

        <button class="h-10 w-12 dark:text-gray-900 rounded-md flex items-center justify-center">
          <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" class="h-5" stroke="currentColor" stroke-width="2"
            fill="none" stroke-linecap="round" stroke-linejoin="round">
            <path d="M18 12l-4-4v3H6v2h8v3z"></path>
            <path d="M20 6h2a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2h-2"></path>
          </svg>
        </button>
      </div>
    </div>

    <!-- main-center section -->
    <div class="flex-grow overflow-hidden h-full flex flex-col">

      <!-- top-nav-links -->
      <div class="h-16 lg:flex w-full border-b hidden px-10">
        <div class="flex h-full text-gray-600 dark:text-gray-900">
          <a href="/"
            class="cursor-pointer h-full border-b-2 border-blue-500 text-blue-500 dark:text-gray-900 dark:border-white inline-flex mr-8 items-center"
            style="color: black; font-weight: 600;border-bottom: 2px solid gray;">হোমপেজ</a>
          <a href="/http://127.0.0.1:5500/main-menu.html"
            class="cursor-pointer h-full border-b-2 border-blue-500 text-blue-500 dark:text-gray-900 dark:border-white inline-flex mr-8 items-center"
            style="color: black; font-weight: 600; border-bottom: 2px solid gray;">এন্ট্রি মেনু</a>
          <a href="/http://127.0.0.1:5500/dist-page1.html"
            class="cursor-pointer h-full border-b-2 dark:text-gray-900 dark:border-white inline-flex mr-8 items-center"
            style="color: black; font-weight: 600;border-bottom: 2px solid rgb(30, 105, 180);">বই বিতরণী তথ্য</a>
          <a href="/http://127.0.0.1:5500/page1.html"
            class="cursor-pointer h-full border-b-2 dark:text-gray-900 dark:border-white inline-flex mr-8 items-center"
            style="padding: 3px; color: black; font-weight: 600; border-bottom: 2px solid gray;">শিক্ষার্থীদের তথ্য</a>
             <a href="/http://127.0.0.1:5500/std-page1.html"
            class="cursor-pointer h-full border-b-2 dark:text-gray-900 dark:border-white inline-flex mr-8 items-center"
            style="padding: 3px; color: black; font-weight: 600; border-bottom: 2px solid gray;">প্রাপ্ত বইয়ের তথ্য</a>
        </div>

        <div class="ml-auto flex items-center space-x-7">

          <a href="http://127.0.0.1:5500/profile.html">

            <button class="flex items-center">
              <span class="relative flex-shrink-0">
                <img class="w-7 h-7 rounded-full" src="http://localhost:4000/assets/images/profile_pic.jpg"
                  alt="profile" />
                <span
                  class="absolute right-0 -mb-0.5 bottom-0 w-2 h-2 rounded-full bg-green-500 border border-white dark:border-gray-900"></span>
              </span>
              <span class="ml-2">এডমিন</span>
              <svg viewBox="0 0 24 24" class="w-4 ml-1 flex-shrink-0" stroke="currentColor" stroke-width="2" fill="none"
                stroke-linecap="round" stroke-linejoin="round">
                <polyline points="6 9 12 15 18 9"></polyline>
              </svg>
            </button>
          </a>
        </div>
      </div>

      <div class="flex-grow flex overflow-x-hidden">

        <!-- 2nd-sidebar-class list -->
        <div class="xl:w-72 w-48 flex-shrink-0 border-r border-gray-20 h-full overflow-y-auto lg:block hidden p-5">

          <div class="space-y-4 mt-3">
            <!-- প্রথম শ্রেণি -->
            <a href="/http://127.0.0.1:5500/dist-page1.html"
              class="bg-white p-3 w-full flex flex-col rounded-md  shadow-lg relative ring-2 ring-blue-500 focus:outline-none"
              style="border: 2px solid rgb(103, 103, 216);">
              <button class="bg-white p-3 w-full flex flex-col rounded-md  shadow">
                <div
                  class="flex xl:flex-row flex-col items-center font-medium text-gray-900 dark:text-gray-900 pb-2 mb-2 xl:border-b    border-opacity-75 dark:border-gray-700 w-full">
                  <img src="http://localhost:4000/assets/images/1.png" class="w-7 h-7 mr-2 rounded-full"
                    alt="profile" />
                  প্রথম শ্রেণি
                </div>
                <div class="flex items-center w-full">
                  <div class="text-xs py-1 px-2 leading-none  bg-blue-100 text-blue-500 rounded-md">
                    প্রাথমিক
                  </div>
                </div>
              </button>
            </a>

            <!-- দ্বিতীয় শ্রেণি -->
            <a href="/http://127.0.0.1:5500/dist-page2.html"
              class="bg-white p-3 w-full flex flex-col rounded-md  shadow">
              <button class="bg-white p-3 w-full flex flex-col rounded-md  shadow">
                <div
                  class="flex xl:flex-row flex-col items-center font-medium text-gray-900 dark:text-gray-900 pb-2 mb-2 xl:border-b    border-opacity-75 dark:border-gray-700 w-full">
                  <img src="http://localhost:4000/assets/images/2.png" class="w-7 h-7 mr-2 rounded-full"
                    alt="profile" />
                  দ্বিতীয় শ্রেণি
                </div>
                <div class="flex items-center w-full">
                  <div class="text-xs py-1 px-2 leading-none  bg-green-100 text-green-600 rounded-md">
                    প্রাথমিক
                  </div>
                </div>
              </button>
            </a>

            <!-- তৃতীয় শ্রেণি -->
            <a href="/http://127.0.0.1:5500/dist-page3.html"
              class="bg-white p-3 w-full flex flex-col rounded-md  shadow">
              <button class="bg-white p-3 w-full flex flex-col rounded-md  shadow">
                <div
                  class="flex xl:flex-row flex-col items-center font-medium text-gray-900 dark:text-gray-900 pb-2 mb-2 xl:border-b    border-opacity-75 dark:border-gray-700 w-full">
                  <img src="http://localhost:4000/assets/images/3.png" class="w-7 h-7 mr-2 rounded-full"
                    alt="profile" />
                  তৃতীয় শ্রেণি
                </div>
                <div class="flex items-center w-full">
                  <div class="text-xs py-1 px-2 leading-none  bg-yellow-100 text-yellow-600 rounded-md">
                    প্রাথমিক
                  </div>
                </div>
              </button>
            </a>

            <!-- চতুর্থ শ্রেণি -->
            <a href="/http://127.0.0.1:5500/dist-page4.html"
              class="bg-white p-3 w-full flex flex-col rounded-md  shadow">
              <button class="bg-white p-3 w-full flex flex-col rounded-md  shadow">
                <div
                  class="flex xl:flex-row flex-col items-center font-medium text-gray-900 dark:text-gray-900 pb-2 mb-2 xl:border-b    border-opacity-75 dark:border-gray-700 w-full">
                  <img src="http://localhost:4000/assets/images/4.png" class="w-7 h-7 mr-2 rounded-full"
                    alt="profile" />
                  চতুর্থ শ্রেণি
                </div>
                <div class="flex items-center w-full">
                  <div class="text-xs py-1 px-2 leading-none  bg-blue-100 text-blue-500 rounded-md">
                    প্রাথমিক
                  </div>
                </div>
              </button>
            </a>

            <!-- পঞ্চম শ্রেণি -->
            <a href="/http://127.0.0.1:5500/dist-page5.html"
              class="bg-white p-3 w-full flex flex-col rounded-md  shadow">
              <button class="bg-white p-3 w-full flex flex-col rounded-md  shadow">
                <div
                  class="flex xl:flex-row flex-col items-center font-medium text-gray-900 dark:text-gray-900 pb-2 mb-2 xl:border-b    border-opacity-75 dark:border-gray-700 w-full">
                  <img src="http://localhost:4000/assets/images/5.png" class="w-7 h-7 mr-2 rounded-full"
                    alt="profile" />
                  পঞ্চম শ্রেণি
                </div>
                <div class="flex items-center w-full">
                  <div class="text-xs py-1 px-2 leading-none  bg-green-100 text-green-600 rounded-md">
                    প্রাথমিক
                  </div>
                </div>
              </button>
            </a>
          </div>
        </div>

        <div class="flex-grow bg-white  overflow-y-auto">


          <div class="sm:p-7 p-4">


            <form class="my-form">
              <label for="yearInput">Enter Year:</label>
              <input type="text" id="yearInput" name="selectedYear" oninput="updateResults()">
            </form>

            <table class="table">
              <thead>
                <tr>
                  <th scope="col">নাম</th>
                  <th scope="col">শিক্ষাবর্ষ</th>
                  <th scope="col">শ্রেণি</th>
                  <th scope="col">রোল</th>
                  <th scope="col">আমার বাংলা বই</th>
                  <th scope="col">English for Today</th>
                  <th scope="col">প্রাথমিক গণিত</th>
                  <th scope="col">অ্যাকশন</th>
                </tr>
              </thead>
              <tbody id="studentTableBody">
                <!-- Table body will be dynamically updated by JavaScript -->
              </tbody>
            </table>

            <script>
              async function updateResults() {
                const yearInput = document.getElementById('yearInput');
                const selectedYear = yearInput.value;

                try {
                  const studentsResponse = await fetch(`http://localhost:4000/class1-year-submit?selectedYear=${selectedYear}`);
                  const booksResponse = await fetch(`http://localhost:4000/class1-year-submit-books-distributed-to-students?selectedYear=${selectedYear}`);

                  if (studentsResponse.ok && booksResponse.ok) {
                    const studentsData = await studentsResponse.json();
                    const booksData = await booksResponse.json();

                    // Merge the data based on the common identifier (e.g., roll)
                    const mergedData = mergeData(studentsData, booksData);

                    updateTable(mergedData);
                  } else {
                    console.error('Error fetching data:', studentsResponse.statusText, booksResponse.statusText);
                  }
                } catch (error) {
                  console.error('Error:', error.message);
                }
              }

              function mergeData(studentsData, booksData) {
                // Assuming there's a common identifier (e.g., roll), merge the two datasets
                return studentsData.map(student => {
                  const matchingBook = booksData.find(book => book.roll === student.roll);
                  return {
                    ...student,
                    bookInfo: matchingBook || {} // Adjust this based on your data structure
                  };
                });
              }

              function updateTable(data) {
                const tableBody = document.getElementById('studentTableBody');
                tableBody.innerHTML = ''; // Clear existing content

                data.forEach(student => {

                  const row = document.createElement('tr');
                  row.innerHTML = `
      <td>${student.first_name} ${student.last_name}</td>
     
      <td>${student.year}</td>
      <td>${student.class}</td>
      <td>${student.roll}</td>
     
   
      ${renderSubjects(student.bookInfo)}
    
      
      <!-- Add other columns from the books table as needed -->
      <td>
        
   <button onclick="showEditBox('${student.class}','${student.roll}', '${student.year}', 

'${JSON.parse(student.bookInfo.subjects)[0]}', '${JSON.parse(student.bookInfo.subjects)[1]}', '${JSON.parse(student.bookInfo.subjects)[2]}'
, '${student.bookInfo.comment}')">

          Edit
        </button>
        <button onclick="deleteData('${student.class}','${student.roll}', '${student.year}')">
          Delete Student
        </button>
      </td>
    `;
                  tableBody.appendChild(row);
                });
              }


              function renderSubjects(bookInfo) {
                if (!bookInfo || !bookInfo.subjects) {
                  return '<td></td><td></td><td></td>'; // Return empty tds if no book info
                }

                const subjects = JSON.parse(bookInfo.subjects);
                // console.log(subjects[0]);

                // Assuming subjects is an array of three elements
                const [bangla, english, math] = subjects;


                return `
    ${generateCheckbox(bangla)}
    ${generateCheckbox(english)}
    ${generateCheckbox(math)}
  `;
              }

              const generateCheckbox = (value) => `<td><input type="checkbox" ${value ? 'checked' : ''} disabled></td>`;

 async function deleteData(classNo, roll, year) {
              const confirmed = window.confirm('Are you sure you want to delete this student record?');

              if (!confirmed) {
                return;
              }

              try {
                const response = await fetch(`http://localhost:4000/delete-studentBookInfo/${classNo}/${roll}/${year}`, {
                  method: 'DELETE',
                  headers: {
                    'Content-Type': 'application/json',
                  },
                });

                if (response.ok) {
                  console.log('Student Book Distributed record deleted successfully');
                  // Update the table without refreshing the page
                  updateResults();
                } else {
                  const data = await response.json();
                  console.error(data.error);
                }
              } catch (error) {
                console.error('Error:', error.message);
              }
            }


            </script>
            <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js"
              integrity="sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM"
              crossorigin="anonymous"></script>

            <!-- this section is the page number navigation at the bottom of the website -->
            <div class="flex w-full mt-5 space-x-2 justify-end">
              <a href="/http://127.0.0.1:5500/dist-page5.html">
                <button
                  class="inline-flex items-center h-8 w-8 justify-center text-gray-500 rounded-md shadow border border-gray-20 leading-none">
                  <svg class="w-4" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2" fill="none"
                    stroke-linecap="round" stroke-linejoin="round">
                    <polyline points="15 18 9 12 15 6"></polyline>
                  </svg>
                </button>
              </a>
              <a href="/http://127.0.0.1:5500/dist-page1.html">
                <button
                  class="inline-flex items-center h-8 w-8 justify-center text-gray-500 rounded-md shadow border border-gray-20 bg-white  dark:text-gray-900 leading-none">
                  1
                </button>
              </a>
              <a href="/http://127.0.0.1:5500/dist-page2.html">
                <button
                  class="inline-flex items-center h-8 w-8 justify-center text-gray-900 rounded-md shadow border border-gray-20 leading-none">
                  2
                </button>
              </a>
              <a href="/http://127.0.0.1:5500/dist-page3.html">
                <button
                  class="inline-flex items-center h-8 w-8 justify-center text-gray-500 rounded-md shadow border border-gray-20 leading-none">
                  3
                </button>
              </a>
              <a href="/http://127.0.0.1:5500/dist-page4.html">
                <button
                  class="inline-flex items-center h-8 w-8 justify-center text-gray-500 rounded-md shadow border border-gray-20 leading-none">
                  4
                </button>
              </a>
              <a href="/http://127.0.0.1:5500/dist-page5.html">

                <button
                  class="inline-flex items-center h-8 w-8 justify-center text-gray-500 rounded-md shadow border border-gray-20 leading-none">
                  5
                </button>
              </a>
              <a href="/http://127.0.0.1:5500/dist-page2.html">
                <button
                  class="inline-flex items-center h-8 w-8 justify-center text-gray-900 rounded-md shadow border border-gray-20 leading-none">
                  <svg class="w-4" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2" fill="none"
                    stroke-linecap="round" stroke-linejoin="round">
                    <polyline points="9 18 15 12 9 6"></polyline>
                  </svg>
                </button>
              </a>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js"
    integrity="sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM"
    crossorigin="anonymous"></script>

</body>

</html>